version: "3.7"

x-datanode_base: &datanode_base
  image: hadoop-datanode
  networks:
    - bridge

services:
  namenode01:
    image: hadoop-namenode
    container_name: namenode01
    hostname: namenode01
    ports:
      - "9098:9870" # namenode web UI
    
    networks:
      - bridge

  namenode02:
    image: hadoop-namenode
    container_name: namenode02
    hostname: namenode02
    ports:
      - "9099:9870" # namenode web UI
   
    networks:
      - bridge

  journalnode01:
    image: hadoop-journalnode
    container_name: journal01
    hostname: journal01
    ports:
      - "9100:8480"
    networks:
      - bridge

  journalnode02:
    image: hadoop-journalnode
    container_name: journal02
    hostname: journal02
    ports:
      - "9101:8480"
    networks:
      - bridge

  journalnode03:
    image: hadoop-journalnode
    container_name: journal03
    hostname: journal03
    ports:
      - "9102:8480"
    networks:
      - bridge

  datanode01:
    <<: *datanode_base
    container_name: datanode01
    hostname: datanode01
    

  datanode02:
    <<: *datanode_base
    container_name: datanode02
    hostname: datanode02
    

  datanode03:
    <<: *datanode_base
    container_name: datanode03
    hostname: datanode03
    

  datanode04:
    <<: *datanode_base
    container_name: datanode04
    hostname: datanode04

  resourcemanager:
    image: resourcemanager
    container_name: resourcemanager
    hostname: resourcemanager
    ports:
      - "9099:8088"
    networks:
      - bridge
  
  sparkhistoryserver:
    image: spark-historyserver
    container_name: sparkhistoryserver
    hostname: sparkhistoryserver
    ports:
      - "9093:18080"
    depends_on:
      - namenode
      - resourcemanager
      
    networks:
      - bridge

  zookeeper01:
    image: zookeeper
    container_name: zookeeper01
    hostname: zookeeper01
    networks:
      - bridge
    command: bash -c 'echo 1 > /opt/zookeeper/dfs/data/myid && zkServer.sh start-foreground'

  zookeeper02:
    image: zookeeper
    container_name: zookeeper02
    hostname: zookeeper02
    networks:
      - bridge
    command: bash -c 'echo 1 > /opt/zookeeper/dfs/data/myid && zkServer.sh start-foreground'

  zookeeper03:
    image: zookeeper
    container_name: zookeeper03
    hostname: zookeeper03
    networks:
      - bridge
    command: bash -c 'echo 1 > /opt/zookeeper/dfs/data/myid && zkServer.sh start-foreground'

volumes:
  namenode:
  datanode01:
  datanode02:
  datanode03:
  datanode04:

networks:
  bridge:

